#!/bin/bash

printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -

read URL
COMMIT=0
if [[ ! "$URL" =~ /pull/ ]]; then
	if [[ ! "$URL" =~ /commit/ ]]; then
		echo "$URL is not a GitHub PR or commit"
		exit 1
	fi
	COMMIT=1
fi

DIR=""
if [[ "$URL" =~ /swaywm/ ]]; then
	SWAY_ROOT=~/programming/forks/sway
	if [[ "$URL" =~ /sway/ ]]; then
		DIR=$SWAY_ROOT
	elif [[ "$URL" =~ /wlroots/ ]]; then
		DIR=$SWAY_ROOT/subprojects/wlroots
	elif [[ "$URL" =~ /swaybg/ ]]; then
		DIR=$SWAY_ROOT/../swaybg
	elif [[ "$URL" =~ /swayidle/ ]]; then
		DIR=$SWAY_ROOT/../swayidle
	elif [[ "$URL" =~ /swaylock/ ]]; then
		DIR=$SWAY_ROOT/../swaylock
	fi
fi

if [ -z "$DIR" ]; then
	echo "$URL points to an unknown repository location"
	exit 2
elif [ ! -d "$DIR" ]; then
	echo "$DIR does not exist"
	exit 3
fi

ID=`echo $URL | grep -Po "[A-Za-z0-9]+$"`

if [ -z "$ID" ]; then
	echo "$URL does not contain an ID"
	exit 4
fi

echo $DIR" -> "$ID

cd $DIR
git stash
git checkout master
git pull
if [ $COMMIT -eq 0 ]; then
	git rev-parse --verify --quiet pr-$ID
	if [ $? -eq 0 ]; then
		git branch -D pr-$ID
	fi
	git fetch origin pull/$ID/head:pr-$ID
	git checkout pr-$ID
else
	git checkout $ID
fi
read -n 1 -s -r -p "Press any key to continue"
